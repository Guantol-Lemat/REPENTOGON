//AnimatePickup - Entity_Player::AnimatePickup(ANM2 const&, bool, char const*)
//(/* public: void __thiscall Player::AnimatePickup(struct ANM2 const &) */) --> rebirth zhl
/*
"558BEC83E4??81EC???????535657FF": //bless JSG
__thiscall void Entity_Player::AnimatePickup(ANM2 *param_1,bool param_2,char *param_3);
*/

//AddCollectible - 
"558bec6aff68????????64a1????????5081ec88000000a1????????33c58945??5657508d45??64a3????????8bf1":
__thiscall void Entity_Player::AddCollectible(int type, int charge, bool firsttime,int slot,int vardata);

//AddBrokenHearts
"558bec83e4f8568bf15783be????????2875??8b86????????85c074??8bf083be????????2874??8bbe":
__thiscall void Entity_Player::AddBrokenHearts(int amount);

//AddBombs
"558bec83e4f88b55??83ec0c568bf1":
__thiscall void Entity_Player::AddBombs(int amount);

//AddKeys
"558bec83ec088b45??8d55??0381????????83f863":
__thiscall void Entity_Player::AddKeys(int amount);

//AddJarHearts
"558bec83b9????????28":
__thiscall void Entity_Player::AddJarHearts(int amount);

//AddJarFlies (func for lua?)
"558bec8b91????????b814000000":
__thiscall void Entity_Player::AddJarFlies(int amount);

//AddPrettyFly (func for lua?)
"568bf18b86????????ff40":
__thiscall void Entity_Player::AddPrettyFly();

//AddCoins
"558bec83ec085356578b7d??8bd985ff":
__thiscall void Entity_Player::AddCoins(int amount);

"558bec83e4f883ec208b4d":
static cleanup PosVel Entity_Player::GetMultiShotPositionVelocity(int loopIndex, WeaponType weaponType, Vector shotDirection, float shotSpeed, Weapon_MultiShotParams multiShotParams);

"558bec83e4f883ec148b45??53568bf133c9":
Weapon_MultiShotParams Entity_Player::GetMultiShotParams(int weaponType);

"558bec83e4f883ec0c53568bf18b0d":
__thiscall Entity_Player* Entity_Player::InitTwin(int playerType); //replace with ePlayerType later

"558bec83e4f881ec4c01000053":
__thiscall Entity* Entity_Player::ThrowHeldEntity(Vector* Velocity);

"558bec6aff68????????64a1????????5081ecd0000000":
__thiscall void Entity_Player::InitPostLevelInitStats();

"558bec83e4f881ec3c010000":
__thiscall void Entity_Player::TriggerRoomExit(bool unk);

"558bec83e4f883ec7ca1????????33c4894424??538bd9":
__thiscall bool Entity_Player::TriggerDeath(bool checkOnly);

"558bec83e4f883ec08568bf15780be????????00":
__thiscall void Entity_Player::Revive();

"558bec568bf1e8????????8b45??8986":
__thiscall void Entity_Player::SetItemState(CollectibleType collectible);

"558bec6aff68????????64a1????????5081ec38040000":
__thiscall void Entity_Player::UseCard(int cardType, unsigned int useFlag);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec78010000a1????????33c58945??5657508d45??64a3????????8bf989bd????????8b43":
__thiscall void Entity_Player::UsePill(int ePillEffect, int ePillColor, unsigned int useFlag);

"8b81????????83c0fc83f824":
__thiscall int Entity_Player::GetHealthType();

"558bec83e4f85153568bf15780be????????00":
__thiscall void Entity_Player::RenderHead(Vector *position);

"558bec83e4f883ec1453568bf15780be????????00":
__thiscall void Entity_Player::RenderBody(Vector *position);

"558bec6aff68????????64a1????????5081ec88000000a1????????33c58945??5657508d45??64a3????????8bf9897d??688f000000":
__thiscall void Entity_Player::TriggerRoomClear();

"558bec83e4f883ec0c538b5d??56578bf985db":
__thiscall bool Entity_Player::CanUseCollectible(CollectibleType collectible, int slot);

"558bec83e4f883ec1c538b5d??56578bf98b0d":
__thiscall bool Entity_Player::HasCollectible(int type, bool ignoreModifiers);

"8b91f01500":
__thiscall int Entity_Player::GetCollectibleCount();

"558bec6aff68????????64a1????????5081ec70060000":
__thiscall void Entity_Player::EvaluateItems();

"558bec6aff68????????64a1????????5083ec20535657a1????????33c5508d45??64a3????????894dec":
__thiscall void Entity_Player::CheckFamiliar(unsigned int FamiliarVariant, unsigned int TargetCount, RNG * rng, ItemConfig_Item* Item, int FamiliarSubType);

"558bec8b45080981b8":
__thiscall void Entity_Player::AddCacheFlags(int flags);

"558bec8b55088d04d5000000002bc28b8481c41400005dc20400":
__thiscall int Entity_Player::GetActiveItem(int slot);

"558bec8b55??33c081c1c4140000":
__thiscall int Entity_Player::GetActiveItemSlot(int id);

"558bec8b55??5356578d04d5":
__thiscall int Entity_Player::GetTotalActiveCharge(int slot);

"558bec8b45??568b75??81fe1e010000":
__thiscall int Entity_Player::GetActiveMaxCharge(int collectible, int vardata); //replace int to CollectibleType for collectible later

// this is a wrapper function that takes a slot and accounts for red redemption. it's also like the existing func below
"558bec518b55??83fa0374??83fa0275??81b9????????4402000075??a1????????83b8????????2c74??8d04d5????????2bc2ffb4":
__thiscall int Entity_Player::GetActiveMaxCharge(int slot);

"558bec518b55??83fa0374??83fa0275??81b9????????4402000075??a1????????83b8????????2c74??8d04d5????????2bc28d14":
__thiscall int Entity_Player::GetActiveMinUsableCharge(int slot);

"558bec8b45??8d14c5????????2bd08b45":
__thiscall void Entity_Player::SetActiveVarData(int vardata, int slot);

"558bec83e4f883ec1c538b5d??56578bf985db":
__thiscall int Entity_Player::AddActiveCharge(unsigned int charge, int slot, bool unk, bool overcharge, bool force);

"558bec83e4f883ec14538b5d??b841020000":
__thiscall Entity_Pickup* Entity_Player::DropCollectible(int collectible, Entity_Pickup* existingCollectible, bool removeFromPlayerForm);

"558bec515356578b7d??8bd9895d":
__thiscall Entity_Pickup* Entity_Player::DropCollectibleByHistoryIndex(int index, Entity_Pickup* existingCollectible);

"558bec83e4f8518a55":
__thiscall void Entity_Player::AddHearts(int hearts, bool unk);

"558bec83e4f8515356578bf98b472c85c075??8b9f0c130000":
__thiscall int Entity_Player::GetHealthLimit(bool keeper);

"558bec83e4f883ec14538b5d0856578bf980bf1c1f000000":
__thiscall void Entity_Player::IncrementPlayerFormCounter(int ePlayerForm, int num);

"558bec83ec3ca1????????33c58945fc5356":
__thiscall void Entity_Player::TriggerNewRoom_TemporaryEffects();

"558bec6aff68????????64a1000000005081ecb8000000535657a1????????":
__thiscall void Entity_Player::TriggerNewStage(bool unk);

"558bec83e4f851568bf18b86????????0386":
__thiscall bool Entity_Player::TryPreventDeath();

"558bec578bf98b4d":
__thiscall void Entity_Player::RemoveCollectibleByHistoryIndex(int index, bool RemovedBool);

"558bec6aff68????????64a1????????5081ec4c010000":
__thiscall void Entity_Player::Teleport(Vector *position, bool doEffects, bool teleportTwinPlayers);

"558bec83e4f881ec1c01000053":
__thiscall bool Entity_Player::TryFakeDeath();

"558bec83e4f883ec145356578bf9837f??01":
__thiscall int Entity_Player::GetCollectibleNum(int collectibleID, bool OnlyCountTrueItems);

"558bec83e4f883ec1c5356578b7d??8bd981ff2e010000":
__thiscall void Entity_Player::TriggerCollectibleRemoved(unsigned int collectibleID);

"558bec83e4f8515356578bf9837f??00":
__thiscall void Entity_Player::TriggerTrinketAdded(unsigned int trinketID, bool firstTimePickingUp);

"558bec83e4f85153568bf157837e??00":
__thiscall void Entity_Player::TriggerTrinketRemoved(unsigned int trinketID);

"558bec83e4f85153565733f6":
__thiscall int Entity_Player::GetWeaponModifiers();

"558bec8b45??8a55":
__thiscall void Entity_Player::EnableWeaponType(WeaponType weaponType, bool Set);

"558bec8b45??05d9020000":
__thiscall PocketItem* Entity_Player::GetPocketItem(int SlotID);

"a1????????568b90????????8bb0":
__thiscall bool Entity_Player::IsLocalPlayer();

"558bec6aff68????????64a1????????5083ec38a1????????33c58945??5657508d45??64a3????????8bf98b87":
__thiscall void Entity_Player::InitPreLevelInitStats();

"558bec83e4f883ec0c5356578bf1":
__thiscall void Entity_Player::AddBlackHearts(unsigned int amount);

"558bec83e4f851538a5d":
__thiscall void Entity_Player::AddRottenHearts(unsigned int amount, bool unk);

"558bec51568bf1c745??000000008d86":
__thiscall void Entity_Player::AddGigaBombs(int amount);

"558bec83ec68a1????????33c58945??a1":
__thiscall void Entity_Player::ShuffleCostumes(int seed);

"558bec83ec2ca1????????33c58945??538b5d":
__thiscall void Entity_Player::RemoveCollectible(unsigned int CollectibleType, bool IgnoreModifiers, unsigned int ActiveSlot, bool RemoveFromPlayerForm);

"558bec6aff68????????64a1????????5083ec6ca1????????33c58945??5657508d45??64a3????????8bf1":
__thiscall void Entity_Player::UpdateIsaacPregnancy(bool Cambion);

"8b89????????83f90f7c":
__thiscall int Entity_Player::GetCambionPregnancyLevel();

"558bec6aff68????????64a1????????5081ecfc000000535657a1????????33c5508d45??64a3????????8bf1":
__thiscall void Entity_Player::CheckPoopSpellQueue();

"558bec6aff68????????64a1????????5081ec78010000":
__thiscall void Entity_Player::AddCostume(ItemConfig_Item* collectibleID, bool itemStateOnly);

"558bec8b55??5685d278??a1????????8bb0????????8b80????????2bc6c1f8023bd07d??8b04??6a00":
__thiscall void Entity_Player::AddNullCostume(int costumeid);

"53568bf15783be????????0074":
__thiscall void Entity_Player::ClearDeadEyeCharge();

"558bec83e4c081ecb4000000a1????????33c4898424????????5356578bf9897c24":
__thiscall void Entity_Player::SwapForgottenForm(bool unk1, bool unk2);

"558bec83e4f081ec480100008b55":
__thiscall TearParams Entity_Player::GetTearHitParams(int WeaponType, float DamageScale, int TearDisplacement, Entity* Source);

"558bec83ec10538bd90f28ca":
__thiscall void Entity_Player::PlayDelayedSFX(unsigned int soundEffectID, int soundDelay, int frameDelay, float volume<xmm2>);

"558bec8b45??568bf183f801":
__thiscall bool Entity_Player::CanUsePill(int pillEffect);

"558bec518b15????????535633f6":
__thiscall uint32_t Entity_Player::InvalidateCoPlayerItems();

"558bec83ec30a1????????33c58945??53":
__thiscall bool Entity_Player::TryRemoveSmeltedTrinket(unsigned int id);

"558bec518b45??538bd9895d":
__thiscall bool Entity_Player::IsItemCostumeVisible(ItemConfig_Item* item, int playerSpriteLayerID);

"558bec56ff75??8bf18b0d????????ff75??8d89????????e8????????50":
__thiscall bool Entity_Player::IsCollectibleCostumeVisible(CollectibleType collectible, int playerSpriteLayerID);

//this has two matches, but the thing i want comes before the other
"558bec8b55??5685d278??a1????????8bb0????????8b80????????2bc6c1f8023bd07d??8b04??5e8945??5de9????????33c05e8945??5de9":
__thiscall bool Entity_Player::IsNullItemCostumeVisible(int nullItemID, int playerSpriteLayerID);

"558bec6aff68????????64a1????????5083ec4ca1????????33c58945??535657508d45??64a3????????8bf18975??8b0d":
__thiscall void Entity_Player::PlayCollectibleAnim(CollectibleType collectible, bool checkBodyAnim, std_string &animName, int frameNum, bool unused);

"558bec51538bd98b0d????????5657ff75":
__thiscall bool Entity_Player::IsCollectibleAnimFinished(CollectibleType collectible, std_string &animName);

"558bec578bf980bf????????0075":
__thiscall void Entity_Player::ClearCollectibleAnim(CollectibleType collectible);

"558bec83e4f856576a00":
__thiscall unsigned int Entity_Player::GetMaxPocketItems();

"558bec515356578bf9e8????????8b5d":
__thiscall void Entity_Player::AddPocketItem(unsigned int slot, unsigned int itemID);

"558bec568bf1e8????????8b0d":
__thiscall void Entity_Player::AddBoneOrbital(Vector* Position);

"558bec83e4f883ec0c837d??005356578bd9":
__thiscall unsigned int Entity_Player::AddItemCard(unsigned int itemID);

"0fb781????????6683f803":
__thiscall void Entity_Player::AddLeprosy();

"558bec83ec088b45??8d55??0381????????83f814":
__thiscall void Entity_Player::AddUrnSouls(unsigned int amount);

"558bec83e4f8518b0d????????568b75":
__thiscall bool Entity_Player::CanAddCollectibleToInventory(int id);

"558bec8b45??568d14c5":
__thiscall bool Entity_Player::CanOverrideActiveItem(unsigned int slot);

"558bec578bf980bf????????0075":
__thiscall void Entity_Player::ClearItemAnimCollectible(int id);

"568bf180be????????0075??a1":
__thiscall void Entity_Player::ClearItemAnimNullItems();

"558bec83e4f081ecb8000000a1????????33c4898424????????8b45":
__thiscall Entity_Bomb* Entity_Player::FireBomb(Vector * pos, Vector * vel, Entity * source);

"558bec83e4f883ec10568bf1f30f115c24":
__thiscall Entity_Knife* Entity_Player::FireBoneClub(Entity* parent, unsigned int variant, bool unk, Weapon* weapon, float unk2<xmm3>);

"558bec83e4f881ec88000000a1????????33c4898424????????568b75":
__thiscall Entity_Effect* Entity_Player::FireBrimstoneBall(const Vector& pos, const Vector& vel, const Vector& offset, unsigned int unk1, unsigned int unk2, Entity* unk3);

"558bec83e4f883ec08568bf157897424":
__thiscall Entity_Knife* Entity_Player::FireKnife(Entity * parent, unsigned int variant, float rotationOffset, bool cantOverwrite, unsigned int subType);

"558bec83e4f081eca8000000a1":
__thiscall Entity_Laser* Entity_Player::FireTechLaser(const Vector& pos, unsigned int offsetID, const Vector& dir, bool leftEye, bool oneHit, Entity * source, float damageScale);

"558bec83e4f881ec88000000a1????????33c4898424????????8b45":
__thiscall Entity_Laser* Entity_Player::FireTechXLaser(const Vector& pos, const Vector& dir, float radius, Entity * source, float damageMultiplier);

"558bec83e4f883ec0c568bf1f30f1086":
__thiscall Vector Entity_Player::GetBodyMoveDirection();

"5356578bf98bb7????????83fe0a":
__thiscall char* Entity_Player::GetDeathAnimName();

"558bec6aff68????????64a1????????5083ec34535657a1????????33c5508d45??64a3????????a1????????33db":
__thiscall unsigned int Entity_Player::GetGlitchBabySubType();

"565733f68bf95668f5010000":
__thiscall int Entity_Player::GetGreedsGulletHearts();

"558bec8b45??83ec10f30f1015":
__thiscall unsigned int Entity_Player::GetSpecialGridCollision(Vector * pos);

"558bec83e4f8568bf1576a53":
__thiscall bool Entity_Player::CanCrushRocks();

"558bec83e4f88b0d????????83ec14":
__thiscall Vector Entity_Player::GetEnterPosition();

/*
"558bec83e4f851566a006a6a":
__thiscall float<xmm0> Entity_Player::GetExplosionRadiusModifier(BitSet128 flags);
*/

"8b81????????85c075??56":
__thiscall Entity* Entity_Player::GetFocusEntity();

"558bec83e4f883ec145356578bf9c74424??00000000":
__thiscall void Entity_Player::GetGlyphOfBalanceDrop(int * variant, int  * subtype);

/*
"558bec83e4f883ec0c568bf1837e??00":
__thiscall float<xmm0> Entity_Player::GetSoundPitch();

"558bec81c150140000":
__thiscall float<xmm0> Entity_Player::GetSalvationScale();
*/

"568bf180be????????0075??8b86":
__thiscall bool Entity_Player::HasInstantDeathCurse();

"558bec83e4f851566a006852020000":
__thiscall bool Entity_Player::HasPoisonImmunity();

"558bec568b75??578bf93bf774??56e8????????84c075??817f??de00000075??817e??de00000074??8b46":
__thiscall bool Entity_Player::IsEntityValidTarget(Entity * entity);

"568bf15780be????????0075??8b86":
__thiscall bool Entity_Player::IsInvisible();

"558bec83e4f8515356578bf98b87":
__thiscall bool Entity_Player::IsFootstepFrame(int eFoot);

"566a0068ce000000":
__thiscall bool Entity_Player::IsHeadless();

"80b9????????0074??8b81????????83f81d":
__thiscall bool Entity_Player::IsHologram();

"558bec83e4f883ec1056578bf98b87":
__thiscall void Entity_Player::MorphToCoopGhost();

"558bec8b45??538bd983f8ff":
__thiscall void Entity_Player::RemovePocketItem(int slot);

"558bec6aff68????????64a1????????5083ec58535657a1????????33c5508d45??64a3????????8bf9":
__thiscall void Entity_Player::RerollAllCollectibles(RNG * rng, bool includeActives);

"558bec83ec0c568bf1837e??00":
__thiscall void Entity_Player::ResetPlayer();

"558bec83e4f883ec1056578bf96a00":
__thiscall void Entity_Player::RevivePlayerGhost();

"558bec6aff68????????64a1????????5081ecb8000000a1????????33c58945??535657508d45??64a3????????8bf9897d":
__thiscall void Entity_Player::SalvageCollectible(Vector * pos, int subtype, unsigned int seed, int poolType);

"558bec83e4f851807d??00":
__thiscall void Entity_Player::SetControllerIndex(unsigned int index);

"558bec566aff":
__thiscall void Entity_Player::SetFootprintColor(KColor * color, bool unk);

"558bec83e4f881ec88000000a1????????33c4898424????????56576a008bf9e8????????83e0018d0445????????5051c704240000803f8d4424??6a01508bcfe8????????8b45??8bcf6a0050f30f1000f30f114424??f30f1040??8d4424??50f30f114424??e8????????f30f105c24??f30f591d????????f30f1050??f30f5818f30f591d????????f30f115c24??f30f105c24??f30f591d????????f30f58daf30f591d????????f30f115c24??e8????????8b0d????????6a00506a00578d4424??508d87????????506a0a":
__thiscall void Entity_Player::ShootBlueCandle(Vector * dir);

"558bec83e4f881ec5401000053":
__thiscall void Entity_Player::SpawnClot(Vector * pos, bool unk);

"558bec83e4f083ec38568bf1":
__thiscall unsigned int Entity_Player::SpawnSaturnusTears();

"558bec83e4f851538b5d??568b75":
__thiscall void Entity_Player::SyncConsumableCounts(Entity_Player* player, int bitflags);

"558bec83e4f883ec74a1????????33c4894424??53568b75":
__thiscall void Entity_Player::TryAddToBagOfCrafting(Entity_Pickup* pickup);

"558bec83ec08538a5d":
__thiscall void Entity_Player::TryDecreaseGlowingHourglassUses(int unk1, bool unk2);

"558bec83e4f883ec1c83b9????????23":
__thiscall bool Entity_Player::TryForgottenThrow(Vector * dir);

"558bec83e4f8f30f1015????????33d2":
__thiscall void Entity_Player::UseRedKey();

"558bec568bf133c08d96":
__thiscall bool Entity_Player::VoidHasCollectible(int id);

"558bec568b75??578bf985f679":
__thiscall RNG* Entity_Player::GetCollectibleRNG(int id);

"558bec83e4f851538bd98b8b????????568b75":
__thiscall void Entity_Player::AttachMinecart(Entity_NPC * minecart);

"558bec83ec0c8b45??8d55??56578bf9c745??630000008d4d??c745??000000008bb7????????03c683f8638945??8d45??0f4ed18bcf56833a000f4dc28b008987????????e8????????6800010000":
__thiscall void Entity_Player::AddBloodCharge(int amount);

"558bec83e4f883ec0c5356578bd96a5e":
__thiscall Entity* Entity_Player::AddBlueFlies(int amount, Vector* pos, Entity* target);

"558bec83e4f851568bf1ff86":
__thiscall Entity* Entity_Player::AddBlueSpider(Vector* pos);

"558bec83e4f851568bf1ff86":
__thiscall Entity_Player* Entity_Player::AddBoneHearts(int amount);

"558bec83e4f883ec24568bf180be????????00":
__thiscall void Entity_Player::AddCurseMistEffect();

"568bf18b86????????83f808":
__thiscall void Entity_Player::AddDeadEyeCharge();

"558bec515356578bd9e8????????33d2":
__thiscall void Entity_Player::AddDollarBillEffect();

"558bec568bf1e8????????83f803":
__thiscall void Entity_Player::AddEternalHearts(int amount);

"6a10c681????????01":
__thiscall void Entity_Player::AddGoldenBomb();

"558bec83e4f8568bf15783be????????2875??8b86????????85c074??8bf083be????????2874??8b8e":
__thiscall void Entity_Player::AddGoldenHearts(int amount);

"6a08c681????????01":
__thiscall void Entity_Player::AddGoldenKey();

"558bec83ec40a1????????33c58945??53568bc1":
__thiscall Entity_Familiar* Entity_Player::AddItemWisp(int collectible, Vector* pos, bool adjustOrbitLayer);

"558bec83e4f85153568bf1578b7d??83be????????28":
__thiscall void Entity_Player::AddMaxHearts(int amount, bool ignoreKeeper);

"558bec83e4f883ec3cf30f100d":
__thiscall Entity_Familiar* Entity_Player::AddMinisaac(Vector* pos, bool playAnim);

"558bec8b55??56578bf9":
__thiscall void Entity_Player::AddPlayerFormCostume(uint32_t form);

"558bec83ec0c568bf1578b7d??03be":
__thiscall void Entity_Player::AddPoopMana(int amount);

"558bec83ec0c8b45??8d55??56578bf9c745??630000008d4d??c745??000000008bb7????????03c683f8638945??8d45??0f4ed18bcf56833a000f4dc28b008987????????e8????????6a20":
__thiscall void Entity_Player::AddSoulCharge(int amount);

"558bec83e4f883ec0c538b5d??56578bf1":
__thiscall Entity_Player* Entity_Player::AddSoulHearts(int amount);

"558bec6aff68????????64a1????????5083ec18535657a1????????33c5508d45??64a3????????8bd9c745??00000000":
__thiscall Entity_Familiar* Entity_Player::AddSwarmFlyOrbital(Vector* pos);

"558bec83e4f883ec24a1????????33c4894424??8b45??5356894424":
__thiscall void Entity_Player::AddTrinket(uint32_t type, bool firstTime);

"558bec6aff68????????64a1????????5083ec64a1????????33c58945??535657508d45??64a3????????894d":
__thiscall Entity_Familiar* Entity_Player::AddWisp(int collectible, Vector* pos, bool adjustOrbitLayer, bool dontUpdate);

"558bec5156578bf98d8f":
__thiscall void Entity_Player::PlayExtraAnimation(const char* animation);

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec48a1????????33c58945??5657508d45??64a3????????8bf9897d??8b4b??8db7":
__thiscall void Entity_Player::AnimateCard(int card, const char* animName);

"558bec83e4f883ec14538bd956578db3????????8bcee8????????8b3d????????8d4424??508d4424??c74424??00645000508d8f????????e8????????8b4424??8078??0075??8178??0064500077??3b87????????74??83c018eb??6a006a006a058d8f????????e8????????6a0083c0748bce50e8????????8b7d":
__thiscall void Entity_Player::AnimateCollectible(uint32_t collectible, const char* animName, const char* spriteAnimName);

"558bec83ec08568b35????????578bf9c745??0c010000":
__thiscall void Entity_Player::AnimateHappy();

"558bec83e4f881ec4401000053":
__thiscall void Entity_Player::AnimatePickup(ANM2* anm2, bool hideShadow, const char* anim);

"558bec83e4f851538bd956578dbb":
__thiscall void Entity_Player::AnimatePill(int pill, const char* anim);

"558bec51538a5d??568bf184db":
__thiscall void Entity_Player::AnimatePitfallIn(bool unk);

"5168????????c781????????03000000":
__thiscall void Entity_Player::AnimatePitfallOut();

"558bec83ec08568b35????????578bf9c745??0b010000":
__thiscall void Entity_Player::AnimateSad();

"558bec51538a5d??ba":
__thiscall void Entity_Player::AnimateTeleport(bool up);

"558bec83e4f883ec14538bd956578db3????????8bcee8????????8b3d????????8d4424??508d4424??c74424??00645000508d8f????????e8????????8b4424??8078??0075??8178??0064500077??3b87????????74??83c018eb??6a006a006a058d8f????????e8????????6a0083c0748bce50e8????????a1":
__thiscall void Entity_Player::AnimateTrinket(uint32_t trinket, const char* anim, const char* spriteAnim);

"80b9????????0074??83b9????????007f??b001c332c0c3????????????????8b81????????c3??????????????????????????????????????????????????":
__thiscall bool Entity_Player::AreControlsEnabled();

"558bec8b45??568bf185c074":
__thiscall bool Entity_Player::CanAddCollectible(int type);

"558bec83e4f8515356578bf10f1f40008b86????????83f82875??8b86????????85c074??8bf0eb??83f81075??8b86????????85c074??8bf0eb??8bce":
__thiscall bool Entity_Player::CanPickBlackHearts();

"558bec83e4f851568bf1660f1f44??00":
__thiscall bool Entity_Player::CanPickBoneHearts();

"83b9????????2875??0f1f8000000000":
__thiscall bool Entity_Player::CanPickGoldenHearts();

"8b81????????83f82474":
__thiscall bool Entity_Player::CanPickRedHearts();

"568bf18b86????????83f828":
__thiscall bool Entity_Player::CanPickRottenHearts();

"558bec83e4f8515356578bf10f1f40008b86????????83f82875??8b86????????85c074??8bf0eb??83f81075??8b86????????85c074??8bf0eb??33ff":
__thiscall bool Entity_Player::CanPickSoulHearts();

"56578bf98b77??85f674??837e??1072":
__thiscall bool Entity_Player::CanPickupItem();

"8b81????????c1e81fc3????????????558bec518b81????????85c0":
__thiscall bool Entity_Player::CanTurnHead();

"558bec6aff68????????64a1????????5083ec54a1????????33c58945??535657508d45??64a3????????8bd9895d??807d??00":
__thiscall void Entity_Player::ChangePlayerType(int playerType, bool force);

"538bd956578bbb????????8bb3":
__thiscall void Entity_Player::ClearCostumes();

"558bec83e4f883ec24b8abaaaa2a":
__thiscall void Entity_Player::ClearTemporaryEffects();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec80000000a1????????33c58945??5657508d45??64a3????????8bf9897d??8b4b":
__thiscall void Entity_Player::DischargeActiveItem(uint32_t activeSlot, uint32_t unk);

"558bec8b45??0181????????8189????????00040000":
__thiscall void Entity_Player::DonateLuck(int luck);

"558bec83e4f883ec4ca1????????33c4894424??535657":
__thiscall void Entity_Player::do_zit_effect(Vector* dir);

"558bec53568b75??8bd95783feff":
__thiscall void Entity_Player::DropPocketItem(uint32_t pocket, Vector* pos);

"558bec515356578bd9e8????????8db3":
__thiscall Entity_Pickup* Entity_Player::DropTrinket(Vector* dropPos, bool replaceTick);

"558bec83e4f881ec88000000a1????????33c4898424????????568b75":
__thiscall Entity_Laser* Entity_Player::FireBrimstone(Vector* direction, Entity* source, float damageMultiplier);

"558bec83e4f881ec84000000a1????????33c4898424????????f30f1045":
__thiscall Entity_Laser* Entity_Player::FireDelayedBrimstone(float angle, Entity* source);

"558bec83e4f881ec90000000a1????????33c4898424????????8b45??568b75":
__thiscall Entity_Tear* Entity_Player::FireTear(Vector* position, Vector velocity, uint32_t flags, Entity* source, float damageMultiplier);

"558bec83ec20568bf183be????????00":
__thiscall bool Entity_Player::FlushQueueItem();

"558bec83e4f85153568b75??8bd95733ff":
__thiscall bool Entity_Player::FullCharge(int activeSlot, bool force);

"558bec8b55??81c2be000000":
__thiscall int Entity_Player::GetActiveCharge(int activeSlot);

"8bc18b88????????85c975??8b88":
__thiscall Entity* Entity_Player::GetActiveWeaponEntity();

"558bec83e4f881ec14010000a1????????33c4898424????????5356":
__thiscall BitSet128 Entity_Player::GetBombFlags(bool unk);

"558bec8b45??83bc??????????01":
__thiscall uint32_t Entity_Player::GetCard(uint32_t slotId);

"558bec568b75??578bf985f678??8b87????????8b8f????????2bc1c1f8043bf07c??68????????6a03e8????????8b8f????????83c40803f65f8d04??5e5dc20400??????????????????????????8b81????????c1e81fc3????????????":
__thiscall RNG* Entity_Player::GetCardRNG(uint32_t cardId);

"8b91????????33c08b89????????2bcac1f902":
__thiscall int Entity_Player::GetCollectibleAmount();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec90000000a1????????33c58945??5657508d45??64a3????????898d":
__thiscall Vector Entity_Player::GetCostumeNullPos(std_string& nullFrameName, bool headScale, Vector& dir);

"8bd1e8????????83f80174??83f80274??8b8a????????8b82????????8d04??c3":
__thiscall int Entity_Player::GetEffectiveMaxHearts();

"8b81????????0fbf91":
__thiscall int Entity_Player::GetExtraLives();

"558beca1????????83ec0c8b80":
__thiscall Vector Entity_Player::GetFlyingOffset();

"558bec8b81????????83ec08":
__thiscall float Entity_Player::GetGreedDonationBreakChance();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505383ec30a1????????33c58945??5657508d45??64a3????????8bf98b43":
__thiscall Vector Entity_Player::GetLaserOffset(int id, Vector& dir);

"8b81????????85c074??8b90":
__thiscall Entity_Player* Entity_Player::GetMainTwin();

"83b9????????1975":
__thiscall uint32_t Entity_Player::GetMaxPoopMana();

"566a00688b000000":
__thiscall int Entity_Player::GetMaxTrinkets();

"558bec83e4f883ec18568bf1578b86????????83f814":
__thiscall Vector Entity_Player::GetMovementInput(float moveSpeed);

"83b9????????108d81????????72??8b00c3????????????????????????????d981????????c3??????????????????8b81????????c3??????????????????":
__thiscall const char* Entity_Player::GetName();

"8b81????????85c075??8b81????????85c075":
__thiscall Entity* Entity_Player::GetNPCTarget();

"558bec8b45??83bc??????????00":
__thiscall int Entity_Player::GetPill(int slot);

"558bec568b75??578bf985f678??8b87????????8b8f????????2bc1c1f8043bf07c??68????????6a03e8????????8b8f????????83c40803f65f8d04??5e5dc20400??????????????????????????558bec568b75??578bf985f678??8b87????????8b8f????????2bc1c1f8043bf07c??68????????6a03e8????????8b8f????????83c40803f65f8d04??5e5dc20400??????????????????????????8b81????????c1e81fc3????????????56578bfa8bf1e8????????8b87":
__thiscall RNG* Entity_Player::GetPillRNG(int id);

"558bec83e4f883ec28568b75??578bf9":
__thiscall Vector Entity_Player::GetShootingInput(float unk);

"558bec83e4f883ec18807d??00":
__thiscall Vector Entity_Player::GetTearMovementInheritance(Vector* shotDir, bool unk);

"558bec8b45??83f802":
__thiscall ItemConfig_Item* Entity_Player::GetTrinket(uint32_t id);

"558bec83e4f883ec1c5356578bf9894c24":
__thiscall int Entity_Player::GetTrinketMultiplier(uint32_t id);

"558bec568b75??578bf985f678??8b87????????8b8f????????2bc1c1f8043bf07c??68????????6a03e8????????8b8f????????83c40803f65f8d04??5e5dc20400??????????????????????????558becff75??e8????????85c00f95c05dc20400????????????????????????":
__thiscall RNG* Entity_Player::GetTrinketRNG(uint32_t id);

"558bec83e4f883ec1056576a006888010000":
__thiscall int Entity_Player::GetZodiacEffect();

"8bd1e8????????83f80174??83f80274??8b8a????????8b82????????8d04??3982":
__thiscall bool Entity_Player::HasFullHearts();

"8b81????????0381????????3b81????????0f9dc0":
__thiscall bool Entity_Player::HasFullHeartsAndSoulHearts();

"558bec5356578bf98b4d":
__thiscall bool Entity_Player::HasInvincibility(int damageFlags);

"558bec80b9????????0075":
__thiscall bool Entity_Player::HasPlayerForm(int form);

"ffb1????????8b0d????????8d89":
__thiscall bool Entity_Player::HasTimedItem();

"558bec807d??0056578bf974":
__thiscall bool Entity_Player::HasTrinket(uint32_t type, bool ignoreModifiers);

"558bec83ec0ca1????????5356":
__thiscall void Entity_Player::InitBabySkin();

"558bec8b45??568bf13b86":
__thiscall bool Entity_Player::IsBlackHeart(int heart);

"558bec8bd183ba????????007e":
__thiscall bool Entity_Player::IsBoneHeart(int heart);

"80b9????????0075??80b9????????0075??b001":
__thiscall bool Entity_Player::IsExtraAnimationFinished();

"568bf16871020000":
__thiscall bool Entity_Player::IsFullSpriteRendering();

"568bf1e8????????84c074??83be????????00":
__thiscall bool Entity_Player::IsHeldItemVisible();

"8b81????????85c074??8378??10":
__thiscall bool Entity_Player::IsHoldingItem();

"83b9????????000f94c0":
__thiscall bool Entity_Player::IsItemQueueEmpty();

"8379??0175??83b9????????007e??b001":
__thiscall bool Entity_Player::IsP2Appearing();

"558bec83e4f883ec188b45":
__thiscall bool Entity_Player::IsPosInSpotLight(Vector* pos);

"8b81????????c1e81fc3????????????56578bfa8bf1e8????????8b87":
__thiscall bool Entity_Player::IsSubPlayer();

"558bec53568b75??578bf985f679":
__thiscall bool Entity_Player::NeedsCharge(int activeSlot);

"558bec8b55??8bc256578bf18d78??908a084084c975??2bc78d8e":
__thiscall void Entity_Player::QueueExtraAnimation(const char* anim);

"558bec51568bf1e8":
__thiscall void Entity_Player::QueueItem(ItemConfig_Item* item, int charge, uint8_t flags, int varData);

"558bec8b55??568bf13b96":
__thiscall void Entity_Player::RemoveBlackHeart(uint32_t blackHeart);

"ff89????????c3??????????????????0fb781????????6683f803":
__thiscall void Entity_Player::RemoveBlueFly();

"ff89????????c3??????????????????8b81????????0fbf91":
__thiscall void Entity_Player::RemoveBlueSpider();

"558bec83e4f8515356578b7d??8bf185ff":
__thiscall void Entity_Player::RemoveCostume(ItemConfig_Item* item);

"558bec83e4f8515356578bf980bf????????000f84????????8b8f":
__thiscall void Entity_Player::RemoveCurseMistEffect();

"6a10c681????????00":
__thiscall void Entity_Player::RemoveGoldenBomb();

"6a08c681????????00":
__thiscall void Entity_Player::RemoveGoldenKey();

"538bd956578b3d????????8bb3":
__thiscall void Entity_Player::RemoveSkinCostume();

"538bdc83ec0883e4f883c404558b6b??896c24??8bec6aff68????????64a1????????505381ec90000000a1????????33c58945??5657508d45??64a3????????8bf989bd????????8b43??8b35":
__thiscall void Entity_Player::RenderDebugInfo(Vector* offset);

"558bec568bf180be????????0074??e8????????84c075??8b86????????68????????68????????ff75??85c078??ffb6????????69c830010000038e????????e8????????5e5dc204006a00":
__thiscall void Entity_Player::RenderGlow(Vector* offset);

"558bec568bf180be????????0074??e8????????84c075??8b86????????68????????68????????ff75??85c078??ffb6????????69c830010000038e????????e8????????5e5dc204006a0e":
__thiscall void Entity_Player::RenderHeadBack(Vector* offset);

"558bec83e4f851566a0068b1010000":
__thiscall bool Entity_Player::RenderShadowLayer(Vector* pos);

"558bec568bf180be????????0074??e8????????84c075??8b86????????68????????68????????ff75??85c078??ffb6????????69c830010000038e????????e8????????5e5dc204006a0b":
__thiscall void Entity_Player::RenderTop(Vector* offset);

"558bec83ec1053568bf157":
__thiscall void Entity_Player::ReplaceCostumeSprite(ItemConfig_Item* item, std_string& spritePath, int spriteId);

"558bec83ec08568bf1578b86????????83f831":
__thiscall void Entity_Player::ResetItemState();

"8189????????00020000e9":
__thiscall void Entity_Player::RespawnFamiliars();

"558bec83e4f883ec0c53568b75??8bd9":
__thiscall void Entity_Player::SetActiveCharge(int charge, int activeSlot);

"558bec8b55??85d278??83fa0473??8b45??8984??????????c784??????????01000000":
__thiscall void Entity_Player::SetCard(uint32_t slot, int card);

"558bec83e4f851568bf183be????????11":
__thiscall void Entity_Player::SetFullHearts();

"558bec8b81????????8d91????????3b45??8d4d??0f4dca8b0189025dc204008b81????????c3??????????????????558bec8b45??8981????????5dc20400":
__thiscall void Entity_Player::SetMinDamageCooldown(int cooldown);

"558bec8b55??85d278??83fa0473??8b45??8984??????????c784??????????00000000":
__thiscall void Entity_Player::SetPill(int slot, int pill);

"558bec83e4f883ec0c538bd156":
__thiscall void Entity_Player::SetPocketActiveItem(uint32_t type, uint32_t slot, bool keepInPools);

"558bec8b45??8d91":
__thiscall void Entity_Player::SetShootingCooldown(int cd);

"558bec83e4f881ec88000000a1????????33c4898424????????56576a008bf9e8????????83e0018d0445????????5051c704240000803f8d4424??6a01508bcfe8????????8b45??8bcf6a0050f30f1000f30f114424??f30f1040??8d4424??50f30f114424??e8????????f30f105c24??f30f591d????????f30f1050??f30f5818f30f591d????????f30f115c24??f30f105c24??f30f591d????????f30f58daf30f591d????????f30f115c24??e8????????8b0d????????6a00506a00578d4424??508d87????????506a34":
__thiscall void Entity_Player::ShootRedCandle(Vector* dir);

"558bec83e4f85153568b35????????578bf9c74424??aa010000":
__thiscall Entity_Laser* Entity_Player::SpawnMawOfVoid(int timeout);

"c681????????00c681????????00c3??558bec566a00ff75":
__thiscall void Entity_Player::StopExtraAnimation();

"568bf183be????????000f84????????e8":
__thiscall void Entity_Player::SwapActiveItems();

"558becff81":
__thiscall Entity* Entity_Player::ThrowBlueSpider(Vector* pos, Vector* target);

"558bec83e4f883ec1c8b45??535657f30f10008bfa":
static cleanup Entity_Familiar* Entity_Player::ThrowFriendlyDip(uint32_t subtype<ecx>, Vector* pos<edx>, Entity_Player* self, Vector* target);

"558bec83e4f8515356576a00":
__thiscall void Entity_Player::TriggerBookOfVirtues(int type, int charge);

"558bec83e4f851538bd983bb????????00":
__thiscall bool Entity_Player::TryHoldEntity(Entity* entity);

"558bec5356578bda":
__thiscall bool Entity_Player::TryHoldTrinket(uint32_t type);

"558bec83e4f85153568b75??578bf985f674":
__thiscall void Entity_Player::TryRemoveCollectibleCostume(int type, bool persistent);

"558bec8b55??5685d278??a1????????8bb0????????8b80????????2bc6c1f8023bd07d??8b04??5e8945??5de9????????33c05e8945??5de9????????????558bec83e4f856576a00":
__thiscall void Entity_Player::TryRemoveNullCostume(int type);

"558bec83e4f883ec2ca1????????33c4894424??538bd956578b7d":
__thiscall bool Entity_Player::TryRemoveTrinket(int type);

"558beca1????????8b55??56":
__thiscall void Entity_Player::TryRemoveTrinketCostume(int type);

"558bec83ec0856578bf980bf????????00":
__thiscall bool Entity_Player::TryUseKey();

"558bec5153568bf1578b46??c686????????01":
__thiscall bool Entity_Player::UpdateCanShoot();

"558bec6aff68????????64a1????????50b864160000":
__thiscall void Entity_Player::UseActiveItem(int item, int useFlags, int slot, int varData);

"558bec83e4f083ec58a1????????33c4894424??8b45":
__thiscall void Entity_Player::UsePoopSpell(int type);

"6a01e8????????c3":
__thiscall bool Entity_Player::WillRevive();

struct Entity_Player depends (ANM2, ColorMod, KColor, PlayerCostumeMap, BitSet128, Vector, EntityRef, TemporaryEffects) : public Entity { {{
	inline RNG* GetDropRNG() {return (RNG*)((char*)this + 0x334); }
    inline int* GetMaxHearts() {return (int*)((char*)this + 0x1290); }
	inline int* GetRedHearts() {return (int*)((char*)this + 0x1294); }
	inline int* GetEternalHearts() {return (int*)((char*)this + 0x1298); }
	inline int* GetSoulHearts() {return (int*)((char*)this + 0x129C); }
	inline int* GetBlackHearts() {return (int*)((char*)this + 0x12A0); }
	inline int* GetMetronomeCollectibleID() { return (int*)((char*)this + 0x12d8); } 
	inline int GetPlayerType() { return *(int*)((char*)this + 0x130c); }
	inline int* GetPlayerTypeMutable() { return (int*)((char*)this + 0x130c); }
	inline Weapon** GetWeapon(int index) { return (Weapon**)((char*)this + index * 4 + 0x1328); }
	inline Entity_Effect* GetMarkedTarget() { return *(Entity_Effect**)((char*)this + 0x1354); }
	inline Entity** GetHeldEntity() { return (Entity**)((char*)this + 0x1358); }
	inline int* GetFireDelayModifier() { return &this->_fireDelayModifier; }
	inline int* GetDamageModifier() { return &this->_damageModifier; }
	inline float* GetEdenSpeed() { return (float*)((char*)this + 0x1490); }
	inline float* GetEdenFireDelay() { return (float*)((char*)this + 0x1494); }
	inline float* GetEdenDamage() { return (float*)((char*)this + 0x1498); }
	inline float* GetEdenRange() { return (float*)((char*)this + 0x149c); }
	inline float* GetEdenShotSpeed() { return (float*)((char*)this + 0x14a0); }
	inline float* GetEdenLuck() { return (float*)((char*)this + 0x14a4); }
	inline int* GetCanFly() { return (int*)((char*)this + 0x14b4); }
	inline std_vector_int GetCollectiblesList() { return *(std_vector_int*)((char*)this + 0x15f0); }
	inline vector_SmeltedTrinketDesc* GetSmeltedTrinket() { return &this->_smeltedTrinkets; }
	inline std_vector_int GetVoidedCollectiblesList() { return *(std_vector_int*)((char*)this + 0x167c); }
	inline int* GetPonyCharge() { return (int*)((char*)this + 0x17a8); } 
	inline int GetDeadEyeCharge() { return *(int*)((char*)this + 0x17D0); }
	inline int GetDeadEyeMisses() { return *(int*)((char*)this + 0x17D0); }
	inline bool* GetCanShoot() { return (bool*)((char*)this + 0x1745); }
	inline int* GetEpiphoraCharge() { return (int*)((char*)this + 0x17c4); }
	inline int* GetMegaBlastDuration() { return (int*)((char*)this + 0x1814); }
	inline int* GetPeeBurstCooldown() { return (int*)((char*)this + 0x1818); }
	inline int* GetMaxPeeBurstCooldown() { return (int*)((char*)this + 0x181c); }
	inline int* GetBladderCharge() { return (int*)((char*)this + 0x1820); }
	inline int* GetMaxBladderCharge() { return (int*)((char*)this + 0x1824); }
	inline bool* IsUrethraBlocked() { return (bool*)((char*)this + 0x1828); }
	inline int* GetNextUrethraBlockFrame() { return (int*)((char*)this + 0x182c); }
	inline int* GetPurityState() { return (int*)((char*)this + 0x184c); }
	inline int* GetImmaculateConceptionState() { return (int*)((char*)this + 0x1850); }
	inline int* GetCambionConceptionState() { return (int*)((char*)this + 0x1854); }
	inline float* GetD8DamageModifier() { return (float*)((char*)this + 0x185C); }
	inline float* GetD8SpeedModifier() { return (float*)((char*)this + 0x1860); }
	inline float* GetD8RangeModifier() { return (float*)((char*)this + 0x1864); }
	inline float* GetD8FireDelayModifier() { return (float*)((char*)this + 0x1868); }
	inline int* GetGoldenHearts() { return (int*)((char*)this + 0x186C); }
	inline int* GetBoneHearts() {return (int*)((char*)this + 0x1CA8); }
	inline int* GetBrokenHearts() {return (int*)((char*)this + 0x1CC0); }
	inline int* GetRottenHearts() {return (int*)((char*)this + 0x1CC4); }
	inline int* GetGigaBombs() {return (int*)((char*)this + 0x1CF4); }
	inline History* GetHistory() { return (History*)((char*)this + 0x1D0C); }
	inline float* GetTearPoisonDamage() { return (float*)((char*)this + 0x14c0); }
	inline ActiveItemDesc* GetActiveItemDesc(int index) { return (ActiveItemDesc*)((char*)this + index * 28 + 0x14c4); }
	inline ANM2* GetHeldSprite() { return &this->_heldSprite; }
}} 

    __vtable {
		skip; // Free
		
        override
        "558bec6aff68????????64a1????????5081eca0010000a1????????33c58945??5657508d45??64a3????????8bf989bd????????f30f7e05":
        void Init(unsigned int type, unsigned int variant, unsigned int subtype, unsigned int initSeed);
		
		skip; // PreUpdate
		
        override
        "558bec6aff68????????64a1????????5081ec8c010000":
        void Update();
		
		skip; // Interpolate
		
		override
		"558bec83e4c081ecb4000000a1????????33c4898424????????538bd9568b75":
		void Render(Vector *offset);
		
		skip; // RenderShadowLayer
		skip; // PostRender
		
        override
        "558bec6aff68????????64a1????????5081ec3c010000a1":
        bool TakeDamage(float Damage, unsigned long long DamageFlags, EntityRef *Source, int DamageCountdown);
		
		skip; // Kill
		skip; // Remove
		skip; // TriggerGlowingHourglass
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		
		override
		"558bec80b9????????000f57c9":
		bool TryThrow(const EntityRef& Source, Vector* pos, float unk);
		
		skip; // GetForwardVector
		
		//override
		"558bec83e4f881ecc8000000a1????????33c4898424????????5657ff75":
		bool HandleCollision(Entity* collider, bool low);
		
		override
		"558bec0f1081":
		void ResetColor();
		
		skip; // LoadEntityConfig
    };
    
    {{ 
    inline int* GetRedStewBonusDuration() { return (int*)((char*)this + 0x1d8c); }
    inline BagOfCraftingPickup* GetBagOfCraftingContent() { return (BagOfCraftingPickup*)((char*)this + 0x1e44); }
	inline std_map_int_int* GetItemWispsList() { return &this->_itemWispsList; }
    inline int* GetBagOfCraftingOutput() { return (int*)((char*)this + 0x1e4c); }
	inline uint8_t* GetWildCardItemType() { return (uint8_t*)((char*)this + 0x1f70); }
	inline int* GetWildCardItem() { return (int*)((char*)this + 0x1f74); }
	inline Entity_Player* GetBackupPlayer() { return *(Entity_Player**)((char*)this + 0x1d84); }
	
	bool LIBZHL_API AddSmeltedTrinket(int trinketID, bool firstTime);
    }}
	int _controlsCooldown: 0x364; // 0x364
	int _shootingCooldown : 0x368; // 0x368
	ANM2 _heldSprite: 0xf48; // 0xf48
	vector_CostumeSpriteDesc _costumeSpriteDescs: 0x1170; // 0x1170
	PlayerCostumeMap _playerCostumeMap[15]: 0x117c; // 0x117c
	uint32_t _blackHearts : 0x12a0; // 0x12a0
	uint32_t _jarHearts : 0x12a4; // 0x12a4
	uint32_t _jarFlies : 0x12a8; // 0x12a8
	uint32_t _numKeys : 0x12ac; // 0x12ac
	bool _hasGoldenKey : 0x12b0; // 0x12b0
	bool _hasGoldenBomb : 0x12b1; // 0x12b0
	uint32_t _numBombs : 0x12b4; // 0x12b4
	uint32_t _numCoins : 0x12b8; // 0x12b4
	uint32_t _blueFlies : 0x12bc; // 0x12bc
	uint32_t _blueSpiders : 0x12c0; // 0x12c0
	uint32_t _gnawedLeafCooldown : 0x12c4; // 0x12c4
	uint32_t _lastActionTriggers : 0x12c8; // 0x12c8
	uint16_t _leprosyNum : 0x12d4; // 0x12d4
	uint32_t _metronomeItem : 0x12d8; // 0x12d8
	uint32_t _monkeyPawCounter : 0x12e4; // 0x12e4
	uint32_t _damageCooldown : 0x1308; // 0x1308
	uint32_t _playerType : 0x130c; // 0x130c
	std_string _name : 0x1310; // 0x1310
	Weapon* _weapon[5] : 0x1328; // 0x1328
	bool _weaponTypeBool[16] : 0x133c; // 0x133c
	Entity_Effect* _markedTarget : 0x1354; // 0x1354
	Entity* _heldEntity : 0x1358; // 0x1358
	Entity_Laser* _tractorBeam : 0x1378; // 0x1378
	Entity* _npcTargetRelated_1 : 0x1394; // 0x1394
	Entity* _npcTargetRelated : 0x1398; // 0x1398 
	float _maxFireDelay : 0x13a8; // 0x13a8
	float _shotSpeed : 0x13ac; // 0x13ac
	float _damage : 0x13b8; // 0x13b8
	float _tearHeight : 0x13bc; // 0x13bc
	float _tearFallingSpeed : 0x13c0; // 0x13c0
	float _tearFallingAcceleration : 0x13c4; // 0x13c4
	float _tearRange : 0x13c8; // 0x13c8
	BitSet128 _tearFlags : 0x13d0; // 0x13d0
	ColorMod _tearColor : 0x13e0; // 0x13e0
	ColorMod _laserColor: 0x140c; // 0x140c
	TemporaryEffects _temporaryEffects : 0x1450; // 0x1450
	int _speedModifier : 0x1468, _fireDelayModifier : 0x146c, _damageModifier : 0x1470, _tearRangeModifier : 0x1474, _shotSpeedModifier : 0x1478, _luckModifier: 0x147c; 
	int _donateLuck : 0x1480; // 0x1480
	float _edenSpeed : 0x1490; // 0x1490
	float _edenMaxFireDelay : 0x1494; // 0x1494
	float _edenDamage : 0x1498; // 0x1498
	float _edenRange : 0x149c; // 0x149c
	float _edenShotSpeed : 0x14a0; // 0x14a0
	float _edenLuck : 0x14a4; // 0x14a4
	uint32_t _cacheFlags : 0x14b8; // 0x14b8
	uint32_t _itemState : 0x1534; // 0x1534
	uint32_t _controllerIndex : 0x154c; // 0x154c
	uint32_t _movementDirection : 0x1558; // 0x1558
	uint32_t _headDirection : 0x155c; // 0x155c
	int _fireDirection: 0x1560; // 0x1560
	Vector _aimDirection : 0x1564; // 0x1564
	bool _opposingShootDirectionsPressed: 0x156c; // 0x156c
	vector_SmeltedTrinketDesc _smeltedTrinkets: 0x1670; // 0x1670
	Vector _lastDirection : 0x1570; // 0x1570
	Vector _movementVector : 0x1578; // 0x1578
	Vector _recentMovementVector : 0x1588; // 0x1588
	Vector _velocityBeforeUpdate : 0x1594; // 0x1594
	EntityRef _lastDamageSource : 0x15b0; // 0x15b0
	int _lastDamageFlags : 0x15d8; // 0x15d8
	int _totalDamageTaken : 0x15e4; // 0x15e4
	int _playerForms[15]: 0x1700; // 0x1700
	KColor _footprintColor1 : 0x1768; // 0x1768
	KColor _footprintColor2 : 0x1794; // 0x1794
	uint32_t _headColor : 0x17b4; // 0x17b4
	uint32_t _bodyColor : 0x17b8; // 0x17b8
	uint32_t _deadEyeCharges : 0x17d0; // 0x17d0
	uint32_t _deadEyeMisses : 0x17d4; // 0x17d4
	float _smoothBodyRotation : 0x1a04; // 0x1a04
	int _babySkin : 0x1a0c; // 0x1a0c
	Entity_Player* _subPlayer : 0x1cb8; // 0x1cb8
	uint32_t _soulCharges : 0x1cc8; // 0x1cc8
	uint32_t _bloodCharges : 0x1ccc; // 0x1ccc
	uint32_t _numGigaBombs : 0x1cf4; // 0x1cf4
	//std_vector_int _wispStorage: 0x1cfc; // 0x1cfc
	Entity_Player* _twinPlayer : 0x1d80; // 0x1d80
	Entity_Player* _backupPlayer : 0x1d84; // 0x1d84
	int _maggySwingCooldown : 0x1df8; // 0x1df8
	char _bagOfCraftingContent[8] : 0x1e44;
	int _poopMana : 0x1e50; // 0x1e50
	char _poopSpellQueue[6] : 0x1e54; // 0x1e54
	int _eveSumptoriumCharge : 0x1e78; // 0x1e78
	std_map_int_int _itemWispsList : 0x1e7c; // 0x1e7c
	int _modelingClayEffect : 0x1eb0; // 0x1eb0
	int _keepersSackBonus : 0x1eb4; // 0x1eb4
	bool _isCoopGhost : 0x1f88; // 0x1f88
	bool _hasCurseMistEffect : 0x1f1c; // 0x1f1c
} : 0x2580;

"f30f1087c40200006a0068(????????)68????????f30f59c1":
reference void* EntityPlayerRTTI;
