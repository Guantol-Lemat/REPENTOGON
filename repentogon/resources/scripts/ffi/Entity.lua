ffi.cdef[[
	void L_Entity_AddBurn(Entity*, const EntityRef&, int, float);
	void L_Entity_AddCharm(Entity*, const EntityRef&, int);
	void L_Entity_AddConfustion(Entity*, const EntityRef&, int);
	void L_Entity_AddFreeze(Entity*, const EntityRef&, int);
	void L_Entity_AddHealth(Entity*, float);
	void L_Entity_AddMidasFreeze(Entity*, const EntityRef&, int);
	void L_Entity_AddPoison(Entity*, const EntityRef&, int, float);
	void L_Entity_AddShrink(Entity*, const EntityRef&, int);
	void L_Entity_AddSlowing(Entity*, const EntityRef&, int, ColorMod*);
	void L_Entity_AddVelocity(Entity*, Vector*);
	void L_Entity_BloodExplode(Entity*);
	void L_Entity_ClearFlags(Entity*, unsigned long long*);
	bool L_Entity_CollidesWithGrid(Entity*);
	void L_Entity_Die(Entity*);
	bool L_Entity_Exists(Entity*);
	int L_Entity_GetBossID(Entity*);
	ColorMod* L_Entity_GetColorFunc(Entity*);
	RNG* L_Entity_GetDropRNG(Entity*);
	unsigned long long* L_Entity_GetFlags(Entity*);
	Entity* L_Entity_GetLastChild(Entity*);
	Entity* L_Entity_GetLastParent(Entity*);
	ANM2* L_Entity_GetSprite(Entity*);
	bool L_Entity_HasCommonParentWithEntity(Entity*, Entity*);
	bool L_Entity_HasEntityFlags(Entity*, unsigned long long*);
	bool L_Entity_HasFullHealth(Entity*);
	bool L_Entity_IsActiveEnemy(Entity*, bool);
	bool L_Entity_IsDead(Entity*);
	bool L_Entity_IsEnemy(Entity*);
	bool L_Entity_IsVulnerableEnemy(Entity*);
	void L_Entity_Kill(Entity*);
	void L_Entity_MultiplyFriction(Entity*);
	void L_Entity_PostRender(Entity*);
	void L_Entity_Remove(Entity*);
	void L_Entity_RemoveStatusEffects(Entity*);
	void L_Entity_Render(Entity*, Vector*);
	bool L_Entity_RenderShadowLayer(Entity*, Vector*);
	void L_Entity_SetColorFunc(Entity*, ColorMod*, int, int, bool, bool);
	void L_Entity_SetSizeFunc(Entity*, float, Vector*, int);
	void L_Entity_setSpriteFrame(Entity*, char*, int);
	bool L_Entity_TakeDamage(Entity*, float, unsigned long long*, EntityRef*, int);
	void L_Entity_Update(Entity*);
	Entity* L_Entity_GetChild(Entity*);
	void L_Entity_SetChild(Entity*, Entity*);
	Entity* L_Entity_GetParent(Entity*);
	void L_Entity_SetParent(Entity*, Entity*);
	ColorMod* L_Entity_GetColorField(Entity*);
	void L_Entity_SetColorField(Entity*, ColorMod*);
	float L_Entity_GetDepthOffset(Entity*);
	void L_Entity_SetDepthOffset(Entity*, float);
	unsigned int L_Entity_GetDropSeed(Entity*);
	void L_Entity_SetDropSeed(Entity*, unsigned int);
	unsigned int L_Entity_GetEntityCollisionClass(Entity*);
	void L_Entity_SetEntityCollisionClass(Entity*, unsigned int);
	unsigned int L_Entity_GetGridCollisionClass(Entity*);
	void L_Entity_SetGridCollisionClass(Entity*, unsigned int);
	bool L_Entity_GetFlipX(Entity*);
	void L_Entity_SetFlipX(Entity*, bool);
	unsigned int L_Entity_GetFrameCount(Entity*);
	void L_Entity_SetFrameCount(Entity*, unsigned int);
	float L_Entity_GetFriction(Entity*);
	void L_Entity_SetFriction(Entity*, float);
	float L_Entity_GetHitPoints(Entity*);
	void L_Entity_SetHitPoints(Entity*, float);
	float L_Entity_GetMaxHitPoints(Entity*);
	void L_Entity_SetMaxHitPoints(Entity*, float);
	unsigned int L_Entity_GetIndex(Entity*);
	unsigned int L_Entity_GetInitSeed(Entity*);
	void L_Entity_SetInitSeed(Entity*, unsigned int);
	float L_Entity_GetMass(Entity*);
	void L_Entity_SetMass(Entity*, float);
	Vector* L_Entity_GetPosition(Entity*);
	void L_Entity_SetPosition(Entity*, Vector*);
	Vector* L_Entity_GetPositionOffset(Entity*);
	void L_Entity_SetPositionOffset(Entity*, Vector*);
	int L_Entity_GetRenderZOffset(Entity*);
	void L_Entity_SetRenderZOffset(Entity*, int);
	float L_Entity_GetSizeField(Entity*);
	void L_Entity_SetSizeField(Entity*, float);
	Vector* L_Entity_GetSizeMulti(Entity*);
	void L_Entity_SetSizeMulti(Entity*, Vector*);
	int L_Entity_GetSortingLayer(Entity*);
	void L_Entity_SetSortingLayer(Entity*, int);
	Entity* L_Entity_GetSpawnerEntity(Entity*);
	void L_Entity_SetSpawnerEntity(Entity*, Entity*);
	unsigned int L_Entity_GetSpawnerType(Entity*);
	void L_Entity_SetSpawnerType(Entity*, unsigned int);
	unsigned int L_Entity_GetSpawnerVariant(Entity*);
	void L_Entity_SetSpawnerVariant(Entity*, unsigned int);
	unsigned int L_Entity_GetSpawnGridIndex(Entity*);
	void L_Entity_SetSpawnGridIndex(Entity*, unsigned int);
	Vector* L_Entity_GetSpriteOffset(Entity*);
	void L_Entity_SetSpriteOffset(Entity*, Vector*);
	ColorMod* L_Entity_GetSplatColor(Entity*);
	void L_Entity_SetSplatColor(Entity*, ColorMod*);
	Vector* L_Entity_GetSpriteScale(Entity*);
	void L_Entity_SetSpriteScale(Entity*, Vector*);
	float L_Entity_GetSpriteRotation(Entity*);
	void L_Entity_SetSpriteRotation(Entity*, float);
	Entity* L_Entity_GetTarget(Entity*);
	void L_Entity_SetTarget(Entity*, Entity*);
	Vector* L_Entity_GetTargetPosition(Entity*);
	void L_Entity_SetTargetPosition(Entity*, Vector*);
	unsigned int L_Entity_GetType(Entity*);
	void L_Entity_SetType(Entity*, unsigned int);
	unsigned int L_Entity_GetVariant(Entity*);
	void L_Entity_SetVariant(Entity*, unsigned int);
	unsigned int L_Entity_GetSubType(Entity*);
	void L_Entity_SetSubType(Entity*, unsigned int);
	Vector* L_Entity_GetVelocity(Entity*);
	void L_Entity_SetVelocity(Entity*, Vector*);
	bool L_Entity_GetVisible(Entity*);
	void L_Entity_SetVisible(Entity*, bool);
]]

local repentogon = ffidll
local lffi = ffi

local EntityFuncs = {}